{"version":3,"sources":["src/gl/shader.js","node_modules/gl-matrix/esm/common.js","node_modules/gl-matrix/esm/mat2.js","node_modules/gl-matrix/esm/mat2d.js","node_modules/gl-matrix/esm/mat3.js","node_modules/gl-matrix/esm/mat4.js","node_modules/gl-matrix/esm/vec3.js","node_modules/gl-matrix/esm/vec4.js","node_modules/gl-matrix/esm/quat.js","node_modules/gl-matrix/esm/quat2.js","node_modules/gl-matrix/esm/vec2.js","node_modules/gl-matrix/esm/index.js","src/gl/draw.js","src/key_press.js","src/objects/cube.js","src/objects/filled_space.js","src/objects/tetris_blocks/line_cube.js","src/objects/line_space.js","src/objects/rainbow.js","src/objects/space.js","src/gl/buffers.js","src/objects/tetris_blocks/jblock.js","src/objects/tetris_blocks/iblock.js","src/objects/tetris_blocks/sblock.js","src/objects/tetris_blocks/tblock.js","src/objects/tetris_blocks/oblock.js","src/world.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["vsSource","fsSource","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","deleteShader","initShaderProgram","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","degree","PI","toRadian","a","equals","b","abs","max","hypot","y","i","arguments","length","sqrt","create","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","t","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","f","tan","Infinity","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","mag1","mag2","mag","cosine","acos","zero","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","l","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","require","projectionMatrix","cameraPosition","zAxis","yAxis","xAxis","modelViewMatrix","fieldOfView","zNear","zFar","updatePerspectiveMatrix","clearDrawing","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawObject","programInfo","buffers","transformMatrix","numComponents","FLOAT","bindBuffer","ARRAY_BUFFER","position","vertexAttribPointer","attribLocations","vertexPosition","enableVertexAttribArray","color","vertexColor","useProgram","program","uniformMatrix4fv","uniformLocations","UNSIGNED_SHORT","linesOnly","drawArrays","LINES","vertexCount","ELEMENT_ARRAY_BUFFER","indices","drawElements","TRIANGLES","rotationMatrix","axisX","axisY","translateX","translateY","translateZ","rotationStep","validatedRotationMatrix","validatedTranslationVector","validatedTransformMatrix","translationVector","getOffsetTransform","spaceSize","offsetTransform","resetPosition","checkKeyDown","e","world","tempMatrix","keyCode","moveDown","reset","validateTransform","isDown","objectOffset","space","object","blockIdx","getBlockIdx","blockPosition","getUnvalidatedTransform","push","tryMoveDown","getTransform","setRandomObject","initBuffers","validated","objectCanMove","positions_length","positions","Cube","colors","getNewPositions","newPositions","getNewIndices","newIndices","getNewVertexCount","FilledSpace","rainbow","LineCube","getVertexCount","arrayEquals","isArray","every","val","index","getSharedFaces","sharedLines","sharedCount","front","hasFront","hasTop","hasRight","some","includes","LineSpace","getRainbow","numColors","value","saturation","X","RGB","RGB_list","Space","zCube","fill","filled","lineSpace","filledSpace","transform","element","movingObject","checkIsOutsideSpace","checkSpaceIsFilled","isFull","row","splice","unshift","accumulator","fillSpace","removeIfLayerFilled","objectEndMove","update","initSpaceBuffers","getPositions","positionBuffer","createBuffer","bufferData","STATIC_DRAW","getColors","colorBuffer","initObjectBuffers","indexBuffer","getIndices","Uint16Array","updateBuffers","buffer","jBlockIdx","jBlockShared","jBlockSharedCount","jBlockSharedLines","jBlockPositions","jBlockIndices","jBlockVertexCount","jBlock","iBlockIdx","iBlockShared","iBlockSharedCount","iBlockSharedLines","iBlockPositions","iBlockIndices","iBlockVertexCount","iBlock","sBlockIdx","sBlockShared","sBlockSharedCount","sBlockSharedLines","sBlockPositions","sBlockIndices","sBlockVertexCount","sBlock","tBlockIdx","tBlockShared","tBlockSharedCount","tBlockSharedLines","tBlockPositions","tBlockIndices","tBlockVertexCount","tBlock","oBlockIdx","oBlockShared","oBlockSharedCount","oBlockSharedLines","oBlockPositions","oBlockIndices","oBlockVertexCount","oBlock","World","s_block","t_block","o_block","j_block","i_block","possibleObjects","timeout","window","setTimeout","startTimeout","objectBuffers","spaceBuffers","spaceLineBuffers","spaceFilledBuffers","main","canvas","document","querySelector","getContext","clientWidth","clientHeight","getAttribLocation","getUniformLocation","spaceTransform","getCentralizeTransform","spaceObjectsTransform","getCentralizeObjectsTransform","then","addEventListener","totalTime","render","now","deltaTime","requestAnimationFrame","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","generated","js","console","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","concat","Function","deps","cached","cache","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const vsSource = `\r\n  attribute vec4 aVertexPosition;\r\n  attribute vec4 aVertexColor;\r\n\r\n  uniform mat4 uModelViewMatrix;\r\n  uniform mat4 uProjectionMatrix;\r\n  uniform mat4 uTransformMatrix;\r\n\r\n  varying lowp vec4 vColor;\r\n\r\n  void main(void) {\r\n    gl_Position = uProjectionMatrix * uModelViewMatrix * uTransformMatrix * aVertexPosition;\r\n    vColor = aVertexColor;\r\n  }\r\n`;\r\n\r\n// Fragment shader program\r\n\r\nconst fsSource = `\r\n  varying lowp vec4 vColor;\r\n\r\n  void main(void) {\r\n    gl_FragColor = vColor;\r\n  }\r\n`;\r\n\r\n//\r\n// creates a shader of the given type, uploads the source and\r\n// compiles it.\r\n//\r\nfunction loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n\r\n  // Send the source to the shader object\r\n\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader program\r\n\r\n  gl.compileShader(shader);\r\n\r\n  // See if it compiled successfully\r\n\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert(\r\n      \"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(shader)\r\n    );\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n//\r\n// Initialize a shader program, so WebGL knows how to draw our data\r\n//\r\nexport default function initShaderProgram(gl) {\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n\r\n  // Create the shader program\r\n\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n\r\n  // If creating the shader program failed, alert\r\n\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert(\r\n      \"Unable to initialize the shader program: \" +\r\n        gl.getProgramInfoLog(shaderProgram)\r\n    );\r\n    return null;\r\n  }\r\n\r\n  return shaderProgram;\r\n}\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","const { mat4, vec3 } = require(\"gl-matrix\");\r\n\r\nconst projectionMatrix = mat4.create();\r\n\r\nfunction lookAt(cameraPosition, target, up) {\r\n  var zAxis = vec3.create();\r\n  var yAxis = vec3.create();\r\n  var xAxis = vec3.create();\r\n  vec3.normalize(zAxis, vec3.sub(zAxis, cameraPosition, target));\r\n  vec3.normalize(xAxis, vec3.cross(xAxis, up, zAxis));\r\n  vec3.normalize(yAxis, vec3.cross(yAxis, zAxis, xAxis));\r\n\r\n  return mat4.fromValues(\r\n    xAxis[0],\r\n    xAxis[1],\r\n    xAxis[2],\r\n    0,\r\n    yAxis[0],\r\n    yAxis[1],\r\n    yAxis[2],\r\n    0,\r\n    zAxis[0],\r\n    zAxis[1],\r\n    zAxis[2],\r\n    0,\r\n    cameraPosition[0],\r\n    cameraPosition[1],\r\n    cameraPosition[2],\r\n    1\r\n  );\r\n}\r\n\r\nconst cameraPosition = vec3.fromValues(0, 0, -5);\r\nconst target = vec3.fromValues(0, 0, 0);\r\nconst up = vec3.fromValues(0, 1, 0);\r\nconst modelViewMatrix = lookAt(cameraPosition, target, up); // camera\r\n\r\nconst fieldOfView = (60 * Math.PI) / 180;\r\nconst zNear = 0.1;\r\nconst zFar = 100.0;\r\n\r\nexport function updatePerspectiveMatrix(aspect) {\r\n  // Update the perspective matrix, a special matrix that is\r\n  // used to simulate the distortion of perspective in a camera.\r\n  // Our field of view is 45 degrees, with a width/height\r\n  // ratio that matches the display size of the canvas\r\n  // and we only want to see objects between 0.1 units\r\n  // and 100 units away from the camera.\r\n  // note: glmatrix.js always has the first argument\r\n  // as the destination to receive the result.\r\n  mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n}\r\n\r\nexport function clearDrawing(gl) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0); // Clear to black, fully opaque\r\n  gl.clearDepth(1.0); // Clear everything\r\n  gl.enable(gl.DEPTH_TEST); // Enable depth testing\r\n  gl.depthFunc(gl.LEQUAL); // Near things obscure far things\r\n\r\n  // Clear the canvas before we start drawing on it.\r\n\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n}\r\n\r\nexport function drawObject(gl, programInfo, buffers, transformMatrix) {\r\n  // Tell WebGL how to pull out the positions from the position\r\n  // buffer into the vertexPosition attribute\r\n  {\r\n    const numComponents = 3;\r\n    const type = gl.FLOAT;\r\n    const normalize = false;\r\n    const stride = 0;\r\n    const offset = 0;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n    gl.vertexAttribPointer(\r\n      programInfo.attribLocations.vertexPosition,\r\n      numComponents,\r\n      type,\r\n      normalize,\r\n      stride,\r\n      offset\r\n    );\r\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\r\n  }\r\n\r\n  // Tell WebGL how to pull out the colors from the color buffer\r\n  // into the vertexColor attribute.\r\n  {\r\n    const numComponents = 4;\r\n    const type = gl.FLOAT;\r\n    const normalize = false;\r\n    const stride = 0;\r\n    const offset = 0;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n    gl.vertexAttribPointer(\r\n      programInfo.attribLocations.vertexColor,\r\n      numComponents,\r\n      type,\r\n      normalize,\r\n      stride,\r\n      offset\r\n    );\r\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor);\r\n  }\r\n\r\n  // Tell WebGL to use our program when drawing\r\n  gl.useProgram(programInfo.program);\r\n\r\n  // Set the shader uniforms\r\n  gl.uniformMatrix4fv(\r\n    programInfo.uniformLocations.projectionMatrix,\r\n    false,\r\n    projectionMatrix\r\n  );\r\n  gl.uniformMatrix4fv(\r\n    programInfo.uniformLocations.modelViewMatrix,\r\n    false,\r\n    modelViewMatrix\r\n  );\r\n  gl.uniformMatrix4fv(\r\n    programInfo.uniformLocations.transformMatrix,\r\n    false,\r\n    transformMatrix\r\n  );\r\n\r\n  const type = gl.UNSIGNED_SHORT;\r\n  const offset = 0;\r\n  if (buffers.linesOnly) {\r\n    gl.drawArrays(gl.LINES, offset, buffers.vertexCount);\r\n  } else {\r\n    // Tell WebGL which indices to use to index the vertices\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n    gl.drawElements(gl.TRIANGLES, buffers.vertexCount, type, offset);\r\n  }\r\n}\r\n","const { mat4, vec3 } = require(\"gl-matrix\");\r\n\r\nvar rotationMatrix = mat4.create();\r\nvar axisX = vec3.fromValues(1, 0, 0);\r\nvar axisY = vec3.fromValues(0, 1, 0);\r\nvar translateX = vec3.fromValues(1, 0, 0);\r\nvar translateY = vec3.fromValues(0, 1, 0);\r\nvar translateZ = vec3.fromValues(0, 0, 1);\r\nvar rotationStep = Math.PI / 2;\r\n\r\nvar validatedRotationMatrix = mat4.create();\r\nvar validatedTranslationVector = vec3.fromValues(0, 0, 0);\r\n\r\nvar transformMatrix = mat4.create();\r\nvar validatedTransformMatrix = mat4.create();\r\n\r\nvar translationVector = vec3.fromValues(0, 0, 0);\r\n\r\nexport function getOffsetTransform(spaceSize) {\r\n  var offsetTransform = mat4.create();\r\n  mat4.translate(offsetTransform, offsetTransform, [\r\n    0.5 - 0.5 * (spaceSize.x % 2), // 0.5 if even\r\n    0.5 - 0.5 * (spaceSize.y % 2), // 0.5 if even\r\n    0\r\n  ]);\r\n  return offsetTransform;\r\n}\r\n\r\nfunction resetPosition() {\r\n  rotationMatrix = mat4.create();\r\n  translationVector = vec3.fromValues(0, 0, 0);\r\n  validatedRotationMatrix = mat4.create();\r\n  validatedTranslationVector = vec3.fromValues(0, 0, 0);\r\n}\r\n\r\nexport function checkKeyDown(e, world) {\r\n  var tempMatrix = mat4.create();\r\n  switch (e.keyCode) {\r\n    case 67: // C ie go down\r\n      moveDown(world);\r\n      return;\r\n    case 82: // Reset\r\n      resetPosition();\r\n      world.reset();\r\n      break;\r\n    case 37: // left arrow key\r\n      mat4.rotate(tempMatrix, tempMatrix, -rotationStep, axisY);\r\n      mat4.mul(rotationMatrix, tempMatrix, rotationMatrix);\r\n      break;\r\n    case 38: // up arrow key\r\n      mat4.rotate(tempMatrix, tempMatrix, rotationStep, axisX);\r\n      mat4.mul(rotationMatrix, tempMatrix, rotationMatrix);\r\n      break;\r\n    case 39: // right arrow key\r\n      mat4.rotate(tempMatrix, tempMatrix, rotationStep, axisY);\r\n      mat4.mul(rotationMatrix, tempMatrix, rotationMatrix);\r\n      break;\r\n    case 40: // down arrow key\r\n      mat4.rotate(tempMatrix, tempMatrix, -rotationStep, axisX);\r\n      mat4.mul(rotationMatrix, tempMatrix, rotationMatrix);\r\n      break;\r\n    case 87: // W\r\n      vec3.add(translationVector, translationVector, translateY);\r\n      break;\r\n    case 65: // A,\r\n      vec3.add(translationVector, translationVector, translateX);\r\n      break;\r\n    case 83: // S\r\n      vec3.sub(translationVector, translationVector, translateY);\r\n      break;\r\n    case 68: // D\r\n      vec3.sub(translationVector, translationVector, translateX);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  validateTransform(world, false);\r\n}\r\n\r\nexport function moveDown(world) {\r\n  vec3.add(translationVector, translationVector, translateZ);\r\n  validateTransform(world, true);\r\n}\r\n\r\nfunction validateTransform(world, isDown) {\r\n  const objectOffset = world.space.objectOffset;\r\n  const object = [];\r\n  const blockIdx = world.object.getBlockIdx();\r\n  var blockPosition;\r\n  for (let i = 0; i < blockIdx.length; i++) {\r\n    blockPosition = vec3.fromValues(\r\n      blockIdx[i][0],\r\n      blockIdx[i][1],\r\n      blockIdx[i][2]\r\n    );\r\n    vec3.transformMat4(blockPosition, blockPosition, getUnvalidatedTransform());\r\n    vec3.add(blockPosition, blockPosition, objectOffset);\r\n    vec3.round(blockPosition, blockPosition);\r\n    object.push(blockPosition);\r\n  }\r\n  if (isDown) {\r\n    if (!world.space.tryMoveDown(object)) {\r\n      if (mat4.equals(getTransform(), mat4.create())) {\r\n        world.reset();\r\n        return;\r\n      }\r\n      world.setRandomObject();\r\n      world.initBuffers();\r\n      resetPosition();\r\n      return;\r\n    }\r\n  }\r\n  const validated = world.space.objectCanMove(object);\r\n  if (validated) {\r\n    mat4.copy(validatedRotationMatrix, rotationMatrix);\r\n    mat4.copy(validatedTranslationVector, translationVector);\r\n  } else {\r\n    mat4.copy(rotationMatrix, validatedRotationMatrix);\r\n    mat4.copy(translationVector, validatedTranslationVector);\r\n  }\r\n}\r\n\r\nfunction getUnvalidatedTransform() {\r\n  mat4.translate(transformMatrix, mat4.create(), translationVector);\r\n  mat4.mul(transformMatrix, transformMatrix, rotationMatrix);\r\n  return transformMatrix;\r\n}\r\n\r\nexport default function getTransform() {\r\n  mat4.translate(\r\n    validatedTransformMatrix,\r\n    mat4.create(),\r\n    validatedTranslationVector\r\n  );\r\n  mat4.mul(\r\n    validatedTransformMatrix,\r\n    validatedTransformMatrix,\r\n    validatedRotationMatrix\r\n  );\r\n  return validatedTransformMatrix;\r\n}\r\n","const { mat4 } = require(\"gl-matrix\");\r\n\r\nexport const positions_length = 24;\r\nconst positions = [\r\n  // Front face\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n\r\n  // Back face\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n\r\n  // Top face\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n\r\n  // Bottom face\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n\r\n  // Right face\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n\r\n  // Left face\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5\r\n];\r\n\r\n// This array defines each face as two triangles, using the\r\n// indices into the vertex array to specify each triangle's\r\n// position.\r\n\r\nconst indices = [\r\n  0,\r\n  1,\r\n  2,\r\n  0,\r\n  2,\r\n  3, // front\r\n  4,\r\n  5,\r\n  6,\r\n  4,\r\n  6,\r\n  7, // back\r\n  8,\r\n  9,\r\n  10,\r\n  8,\r\n  10,\r\n  11, // top\r\n  12,\r\n  13,\r\n  14,\r\n  12,\r\n  14,\r\n  15, // bottom\r\n  16,\r\n  17,\r\n  18,\r\n  16,\r\n  18,\r\n  19, // right\r\n  20,\r\n  21,\r\n  22,\r\n  20,\r\n  22,\r\n  23 // left\r\n];\r\n\r\nexport const vertexCount = 36;\r\n\r\nexport default class Cube {\r\n  constructor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  getColors() {\r\n    var colors = [];\r\n    for (let i = 0; i < positions_length; i++) {\r\n      colors.push(this.color[0], this.color[1], this.color[2], this.color[3]);\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  linesOnly() {\r\n    return false;\r\n  }\r\n\r\n  getPositions() {\r\n    return positions;\r\n  }\r\n\r\n  getIndices() {\r\n    return indices;\r\n  }\r\n  getVertexCount() {\r\n    return vertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return [[0, 0, 0]];\r\n  }\r\n}\r\n\r\nexport function getNewPositions(blockIdx) {\r\n  var newPositions = [];\r\n  var x;\r\n  var y;\r\n  var z;\r\n  for (let i = 0; i < blockIdx.length; i++) {\r\n    for (let j = 0; j < positions.length; j += 3) {\r\n      x = positions[j] + blockIdx[i][0];\r\n      y = positions[j + 1] + blockIdx[i][1];\r\n      z = positions[j + 2] + blockIdx[i][2];\r\n      newPositions.push(x, y, z);\r\n    }\r\n  }\r\n  return newPositions;\r\n}\r\n\r\nexport function getNewIndices(blockIdx) {\r\n  var newIndices = [];\r\n  for (let i = 0; i < blockIdx.length; i++) {\r\n    for (let j = 0; j < indices.length; j++) {\r\n      newIndices.push(indices[j] + (i * positions.length) / 3);\r\n    }\r\n  }\r\n  return newIndices;\r\n}\r\n\r\nexport function getNewVertexCount(blockIdx) {\r\n  return vertexCount * blockIdx.length;\r\n}\r\n","import Cube, {\r\n  positions_length,\r\n  getNewVertexCount,\r\n  getNewPositions,\r\n  getNewIndices\r\n} from \"./cube.js\";\r\n\r\nexport default class FilledSpace extends Cube {\r\n  constructor(color, rainbow) {\r\n    super(color);\r\n    this.rainbow = rainbow;\r\n    this.blockIdx = [];\r\n  }\r\n\r\n  getColors() {\r\n    var colors = [];\r\n    var z;\r\n    for (let i = 0; i < this.blockIdx.length; i++) {\r\n      z = this.blockIdx[i][2];\r\n      for (let j = 0; j < positions_length; j++) {\r\n        colors.push(\r\n          this.rainbow[z][0],\r\n          this.rainbow[z][1],\r\n          this.rainbow[z][2],\r\n          this.rainbow[z][3]\r\n        );\r\n      }\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  update(blockIdx) {\r\n    this.blockIdx = blockIdx;\r\n    this.positions = getNewPositions(this.blockIdx);\r\n    this.indices = getNewIndices(this.blockIdx);\r\n    this.vertexCount = getNewVertexCount(this.blockIdx);\r\n  }\r\n\r\n  getPositions() {\r\n    return this.positions;\r\n  }\r\n  getIndices() {\r\n    return this.indices;\r\n  }\r\n  getVertexCount() {\r\n    return this.vertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return this.blockIdx;\r\n  }\r\n}\r\n","const { mat4 } = require(\"gl-matrix\");\r\n\r\nconst positions = [\r\n  // Front Top\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n\r\n  // Front Bottom\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n\r\n  // Front Left\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n\r\n  // Front Right\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n\r\n  // Back Top\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n\r\n  // Back Bottom\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n\r\n  // Back Left\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n\r\n  // Back Right\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n\r\n  // Top Left\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  0.5,\r\n\r\n  // Top Right\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  0.5,\r\n  -0.5,\r\n\r\n  // Bottom Left\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  -0.5,\r\n\r\n  // Bottom Right\r\n  0.5,\r\n  -0.5,\r\n  -0.5,\r\n  0.5,\r\n  -0.5,\r\n  0.5\r\n];\r\n\r\n// This array defines each face as two triangles, using the\r\n// indices into the vertex array to specify each triangle's\r\n// position.\r\n\r\nconst indices = [];\r\n\r\nconst vertexCount = 48;\r\n\r\nexport default class LineCube {\r\n  constructor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  getColors() {\r\n    var colors = [];\r\n    for (let i = 0; i < this.getVertexCount(); i++) {\r\n      colors.push(this.color[0], this.color[1], this.color[2], this.color[3]);\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  linesOnly() {\r\n    return true;\r\n  }\r\n\r\n  getPositions() {\r\n    return positions;\r\n  }\r\n\r\n  getIndices() {\r\n    return indices;\r\n  }\r\n  getVertexCount() {\r\n    return vertexCount;\r\n  }\r\n\r\n  getBlockIdx() {\r\n    return [[0, 0, 0]];\r\n  }\r\n}\r\n\r\nfunction arrayEquals(a, b) {\r\n  return (\r\n    Array.isArray(a) &&\r\n    Array.isArray(b) &&\r\n    a.length === b.length &&\r\n    a.every((val, index) => val === b[index])\r\n  );\r\n}\r\n\r\nexport function getSharedFaces(blockIdx) {\r\n  var sharedLines = {};\r\n  var sharedCount = 0;\r\n  var front;\r\n  var right;\r\n  var top;\r\n  var hasFront;\r\n  var hasTop;\r\n  var hasRight;\r\n  for (let i = 0; i < blockIdx.length; i++) {\r\n    sharedLines[blockIdx[i]] = [];\r\n  }\r\n  for (let i = 0; i < blockIdx.length; i++) {\r\n    front = [blockIdx[i][0], blockIdx[i][1], blockIdx[i][2] + 1];\r\n    top = [blockIdx[i][0], blockIdx[i][1] + 1, blockIdx[i][2]];\r\n    right = [blockIdx[i][0] + 1, blockIdx[i][1], blockIdx[i][2]];\r\n\r\n    hasFront = blockIdx.some((e) => arrayEquals(e, front));\r\n    hasTop = blockIdx.some((e) => arrayEquals(e, top));\r\n    hasRight = blockIdx.some((e) => arrayEquals(e, right));\r\n\r\n    if (hasFront) {\r\n      sharedLines[blockIdx[i]].push(0, 1, 2, 3);\r\n      sharedLines[front].push(4, 5, 6, 7);\r\n      sharedCount += 8;\r\n    }\r\n    if (hasTop) {\r\n      sharedLines[blockIdx[i]].push(0, 4, 8, 9);\r\n      sharedLines[top].push(1, 5, 10, 11);\r\n      sharedCount += 8 - hasFront * 2;\r\n    }\r\n    if (hasRight) {\r\n      sharedLines[blockIdx[i]].push(3, 7, 9, 11);\r\n      sharedLines[right].push(2, 6, 8, 10);\r\n      sharedCount += 8 - hasFront * 2 - hasTop * 2;\r\n    }\r\n  }\r\n  return { sharedCount, sharedLines };\r\n}\r\n\r\nexport function getNewPositions(blockIdx, sharedLines) {\r\n  var newPositions = [];\r\n  var x;\r\n  var y;\r\n  var z;\r\n  var a;\r\n  var b;\r\n  var c;\r\n  for (let i = 0; i < blockIdx.length; i++) {\r\n    for (let j = 0; j < positions.length; j += 6) {\r\n      if (\r\n        sharedLines.length === 0 ||\r\n        !sharedLines[blockIdx[i]].includes(j / 6)\r\n      ) {\r\n        x = positions[j] + blockIdx[i][0];\r\n        y = positions[j + 1] + blockIdx[i][1];\r\n        z = positions[j + 2] + blockIdx[i][2];\r\n        a = positions[j + 3] + blockIdx[i][0];\r\n        b = positions[j + 4] + blockIdx[i][1];\r\n        c = positions[j + 5] + blockIdx[i][2];\r\n        newPositions.push(x, y, z, a, b, c);\r\n      }\r\n    }\r\n  }\r\n  return newPositions;\r\n}\r\n\r\nexport function getNewIndices(blockIdx) {\r\n  return indices;\r\n}\r\n\r\nexport function getNewVertexCount(blockIdx, sharedCount) {\r\n  return vertexCount * blockIdx.length - sharedCount * 2;\r\n}\r\n","import LineCube, {\r\n  getNewVertexCount,\r\n  getNewPositions\r\n} from \"./tetris_blocks/line_cube.js\";\r\n\r\nexport default class LineSpace extends LineCube {\r\n  constructor(color) {\r\n    super(color);\r\n    this.blockIdx = [];\r\n  }\r\n\r\n  update(blockIdx) {\r\n    this.blockIdx = blockIdx;\r\n    this.positions = getNewPositions(this.blockIdx, []);\r\n    this.vertexCount = getNewVertexCount(this.blockIdx, 0);\r\n  }\r\n\r\n  getPositions() {\r\n    return this.positions;\r\n  }\r\n\r\n  getIndices() {\r\n    return;\r\n  }\r\n  getVertexCount() {\r\n    return this.vertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return this.blockIdx;\r\n  }\r\n}\r\n","// formula from https://www.rapidtables.com/convert/color/hsv-to-rgb.html\r\n\r\nexport default function getRainbow(numColors, value = 1.0, saturation = 1.0) {\r\n  const C = value * saturation;\r\n  var X;\r\n  var H;\r\n  var m;\r\n  var RGB;\r\n  var RGB_list = [];\r\n  if (numColors <= 1) {\r\n    return;\r\n  }\r\n  for (let i = 0; i < numColors; i++) {\r\n    H = (360 / (numColors - 1)) * i;\r\n    X = C * (1 - Math.abs(((H / 60) % 2) - 1));\r\n    m = value - C;\r\n    if (H < 60) {\r\n      RGB = [C, X, 0];\r\n    } else if (H < 120) {\r\n      RGB = [X, C, 0];\r\n    } else if (H < 180) {\r\n      RGB = [0, C, X];\r\n    } else if (H < 240) {\r\n      RGB = [0, X, C];\r\n    } else if (H < 300) {\r\n      RGB = [X, 0, C];\r\n    } else {\r\n      RGB = [C, 0, X];\r\n    }\r\n    RGB_list.push([RGB[0] + m, RGB[1] + m, RGB[2] + m, 1]);\r\n  }\r\n  return RGB_list;\r\n}\r\n","import FilledSpace from \"./filled_space\";\r\nimport LineSpace from \"./line_space\";\r\nimport getRainbow from \"./rainbow\";\r\n\r\nconst { mat4 } = require(\"gl-matrix\");\r\n\r\nexport default class Space {\r\n  constructor(spaceSize) {\r\n    this.spaceSize = spaceSize;\r\n    this.objectOffset = [\r\n      Math.floor(this.spaceSize.x / 2),\r\n      Math.floor(this.spaceSize.y / 2),\r\n      0\r\n    ];\r\n    this.zCube = new Array(spaceSize.z);\r\n    for (let i = 0; i < spaceSize.z; i++) {\r\n      this.zCube[i] = new Array(spaceSize.y);\r\n      for (let j = 0; j < spaceSize.y; j++) {\r\n        this.zCube[i][j] = Array(spaceSize.x).fill(0);\r\n      }\r\n    }\r\n    this.filled = [];\r\n    this.lineSpace = new LineSpace([0, 0, 0, 1]);\r\n    this.filledSpace = new FilledSpace(\r\n      [1, 0, 0, 1],\r\n      getRainbow(this.spaceSize.z)\r\n    );\r\n  }\r\n\r\n  getFilledArray() {\r\n    return this.filled;\r\n  }\r\n\r\n  getPositions() {\r\n    var positions = [];\r\n    for (let i = 0; i < this.spaceSize.x + 1; i++) {\r\n      positions.push(\r\n        i,\r\n        0,\r\n        0,\r\n        i,\r\n        0,\r\n        this.spaceSize.z,\r\n        i,\r\n        this.spaceSize.x,\r\n        0,\r\n        i,\r\n        this.spaceSize.x,\r\n        this.spaceSize.z\r\n      );\r\n    }\r\n    for (let i = 0; i < this.spaceSize.y + 1; i++) {\r\n      positions.push(\r\n        0,\r\n        i,\r\n        0,\r\n        0,\r\n        i,\r\n        this.spaceSize.z,\r\n        this.spaceSize.y,\r\n        i,\r\n        0,\r\n        this.spaceSize.y,\r\n        i,\r\n        this.spaceSize.z\r\n      );\r\n    }\r\n    for (let i = 0; i < this.spaceSize.z + 1; i++) {\r\n      positions.push(\r\n        0,\r\n        0,\r\n        i,\r\n        0,\r\n        this.spaceSize.y,\r\n        i,\r\n        this.spaceSize.x,\r\n        0,\r\n        i,\r\n        this.spaceSize.x,\r\n        this.spaceSize.y,\r\n        i\r\n      );\r\n      positions.push(\r\n        0,\r\n        0,\r\n        i,\r\n        this.spaceSize.x,\r\n        0,\r\n        i,\r\n        0,\r\n        this.spaceSize.y,\r\n        i,\r\n        this.spaceSize.x,\r\n        this.spaceSize.y,\r\n        i\r\n      );\r\n    }\r\n    return positions;\r\n  }\r\n\r\n  getVertexCount() {\r\n    return (\r\n      4 * (this.spaceSize.x + 1) +\r\n      4 * (this.spaceSize.y + 1) +\r\n      8 * (this.spaceSize.z + 1)\r\n    );\r\n  }\r\n\r\n  getColors() {\r\n    var colors = [];\r\n    for (let i = 0; i < this.getVertexCount(); i++) {\r\n      colors.push(0, 0.6, 0, 1);\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  getCentralizeTransform() {\r\n    const transform = mat4.create();\r\n    mat4.translate(transform, transform, [\r\n      -this.spaceSize.x / 2,\r\n      -this.spaceSize.y / 2,\r\n      -0.5\r\n    ]);\r\n    return transform;\r\n  }\r\n\r\n  getCentralizeObjectsTransform() {\r\n    const transform = mat4.create();\r\n    mat4.translate(transform, transform, [\r\n      -this.spaceSize.x / 2 + 0.5,\r\n      -this.spaceSize.y / 2 + 0.5,\r\n      0\r\n    ]);\r\n    return transform;\r\n  }\r\n\r\n  checkSpaceIsFilled(element) {\r\n    if (element[2] < 0) {\r\n      return false;\r\n    } else if (this.zCube[element[2]][element[1]][element[0]]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkIsOutsideSpace(element) {\r\n    return (\r\n      element[0] >= this.spaceSize.x ||\r\n      element[0] < 0 ||\r\n      element[1] >= this.spaceSize.y ||\r\n      element[1] < 0 ||\r\n      element[2] >= this.spaceSize.z\r\n    );\r\n  }\r\n\r\n  objectCanMove(movingObject) {\r\n    return !(\r\n      movingObject.some(this.checkIsOutsideSpace, this) ||\r\n      movingObject.some(this.checkSpaceIsFilled, this)\r\n    );\r\n  }\r\n\r\n  fillSpace(position) {\r\n    this.zCube[position[2] - 1][position[1]][position[0]] = 1;\r\n    this.filled.push([position[0], position[1], position[2] - 1]);\r\n  }\r\n\r\n  removeIfLayerFilled(position) {\r\n    const z = position[2] - 1;\r\n    const isFull = !this.zCube[z].some((row) => row.some((e) => e === 0));\r\n    if (isFull) {\r\n      this.zCube.splice(z, 1);\r\n      this.zCube.unshift(new Array(this.spaceSize.y));\r\n      for (let i = 0; i < this.spaceSize.y; i++) {\r\n        this.zCube[0][i] = Array(this.spaceSize.x).fill(0);\r\n      }\r\n      var offset = 0;\r\n      var length = this.filled.length;\r\n      for (let i = 0; i < length; i++) {\r\n        if (this.filled[i - offset][2] === z) {\r\n          this.filled.splice(i - offset, 1);\r\n          offset += 1;\r\n        } else if (this.filled[i - offset][2] < z) {\r\n          this.filled[i - offset][2] += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  add(accumulator, a) {\r\n    return accumulator + a;\r\n  }\r\n\r\n  objectEndMove(movingObject) {\r\n    movingObject.forEach(this.fillSpace, this);\r\n    movingObject.forEach(this.removeIfLayerFilled, this);\r\n  }\r\n\r\n  tryMoveDown(movingObject) {\r\n    if (!this.objectCanMove(movingObject)) {\r\n      this.objectEndMove(movingObject);\r\n      this.lineSpace.update(this.filled);\r\n      this.filledSpace.update(this.filled);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","//\r\n// initBuffers\r\n//\r\n// Initialize the buffers we'll need. For this demo, we just\r\n// have one object -- a simple three-dimensional cube.\r\n//\r\n\r\nexport function initSpaceBuffers(gl, space) {\r\n  const positions = space.getPositions();\r\n  const positionBuffer = gl.createBuffer();\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n  const vertexCount = space.getVertexCount();\r\n  const colors = space.getColors();\r\n\r\n  const colorBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n  return {\r\n    position: positionBuffer,\r\n    color: colorBuffer,\r\n    vertexCount: vertexCount,\r\n    linesOnly: true\r\n  };\r\n}\r\n\r\nexport default function initObjectBuffers(gl, object) {\r\n  // Create a buffer for the cube's vertex positions.\r\n\r\n  const positionBuffer = gl.createBuffer();\r\n\r\n  // Select the positionBuffer as the one to apply buffer\r\n  // operations to from here out.\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n  // Now create an array of positions for the cube.\r\n\r\n  // Now pass the list of positions into WebGL to build the\r\n  // shape. We do this by creating a Float32Array from the\r\n  // JavaScript array, then use it to fill the current buffer.\r\n  const positions = object.getPositions();\r\n\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n  const vertexCount = object.getVertexCount();\r\n\r\n  const colorBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n  gl.bufferData(\r\n    gl.ARRAY_BUFFER,\r\n    new Float32Array(object.getColors()),\r\n    gl.STATIC_DRAW\r\n  );\r\n\r\n  // Build the element array buffer; this specifies the indices\r\n  // into the vertex arrays for each face's vertices.\r\n\r\n  const indexBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n  const indices = object.getIndices();\r\n\r\n  // Now send the element array to GL\r\n\r\n  gl.bufferData(\r\n    gl.ELEMENT_ARRAY_BUFFER,\r\n    new Uint16Array(indices),\r\n    gl.STATIC_DRAW\r\n  );\r\n\r\n  return {\r\n    position: positionBuffer,\r\n    color: colorBuffer,\r\n    indices: indexBuffer,\r\n    vertexCount: vertexCount,\r\n    linesOnly: object.linesOnly()\r\n  };\r\n}\r\n\r\nexport function updateBuffers(gl, buffer, object) {\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer.position);\r\n  const positions = object.getPositions();\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n  const vertexCount = object.getVertexCount();\r\n  buffer.vertexCount = vertexCount;\r\n\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indices);\r\n  const indices = object.getIndices();\r\n  gl.bufferData(\r\n    gl.ELEMENT_ARRAY_BUFFER,\r\n    new Uint16Array(indices),\r\n    gl.STATIC_DRAW\r\n  );\r\n\r\n  return buffer;\r\n}\r\n","import LineCube, {\r\n  getNewVertexCount,\r\n  getNewPositions,\r\n  getNewIndices,\r\n  getSharedFaces\r\n} from \"./line_cube.js\";\r\n\r\n/* j-block\r\n  ________\r\n |____   |\r\n      |__|\r\n */\r\n\r\nvar jBlockIdx = [\r\n  [0, -1, 0],\r\n  [0, 0, 0],\r\n  [0, 1, 0],\r\n  [1, 1, 0]\r\n];\r\n\r\nconst jBlockShared = getSharedFaces(jBlockIdx);\r\nconst jBlockSharedCount = jBlockShared.sharedCount;\r\nconst jBlockSharedLines = jBlockShared.sharedLines;\r\nconst jBlockPositions = getNewPositions(jBlockIdx, jBlockSharedLines);\r\nconst jBlockIndices = getNewIndices(jBlockIdx);\r\nconst jBlockVertexCount = getNewVertexCount(jBlockIdx, jBlockSharedCount);\r\n\r\nexport default class jBlock extends LineCube {\r\n  getPositions() {\r\n    return jBlockPositions;\r\n  }\r\n  getIndices() {\r\n    return jBlockIndices;\r\n  }\r\n  getVertexCount() {\r\n    return jBlockVertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return jBlockIdx;\r\n  }\r\n}\r\n","import LineCube, {\r\n  getNewVertexCount,\r\n  getNewPositions,\r\n  getNewIndices,\r\n  getSharedFaces\r\n} from \"./line_cube.js\";\r\n\r\n/* i-block\r\n  _________\r\n |________|\r\n */\r\n\r\nvar iBlockIdx = [\r\n  [0, -2, 0],\r\n  [0, -1, 0],\r\n  [0, 0, 0],\r\n  [0, 1, 0]\r\n];\r\n\r\nconst iBlockShared = getSharedFaces(iBlockIdx);\r\nconst iBlockSharedCount = iBlockShared.sharedCount;\r\nconst iBlockSharedLines = iBlockShared.sharedLines;\r\nconst iBlockPositions = getNewPositions(iBlockIdx, iBlockSharedLines);\r\nconst iBlockIndices = getNewIndices(iBlockIdx);\r\nconst iBlockVertexCount = getNewVertexCount(iBlockIdx, iBlockSharedCount);\r\n\r\nexport default class iBlock extends LineCube {\r\n  getPositions() {\r\n    return iBlockPositions;\r\n  }\r\n  getIndices() {\r\n    return iBlockIndices;\r\n  }\r\n  getVertexCount() {\r\n    return iBlockVertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return iBlockIdx;\r\n  }\r\n}\r\n","import LineCube, {\r\n  getNewVertexCount,\r\n  getNewPositions,\r\n  getNewIndices,\r\n  getSharedFaces\r\n} from \"./line_cube.js\";\r\n\r\n/* s-block || z-block (same in 3d)\r\n      _____\r\n   __|   __|\r\n  |_____|\r\n */\r\n\r\nvar sBlockIdx = [\r\n  [0, -1, 0],\r\n  [0, 0, 0],\r\n  [1, 0, 0],\r\n  [1, 1, 0]\r\n];\r\nconst sBlockShared = getSharedFaces(sBlockIdx);\r\nconst sBlockSharedCount = sBlockShared.sharedCount;\r\nconst sBlockSharedLines = sBlockShared.sharedLines;\r\nconst sBlockPositions = getNewPositions(sBlockIdx, sBlockSharedLines);\r\nconst sBlockIndices = getNewIndices(sBlockIdx);\r\nconst sBlockVertexCount = getNewVertexCount(sBlockIdx, sBlockSharedCount);\r\n\r\nexport default class sBlock extends LineCube {\r\n  getPositions() {\r\n    return sBlockPositions;\r\n  }\r\n  getIndices() {\r\n    return sBlockIndices;\r\n  }\r\n  getVertexCount() {\r\n    return sBlockVertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return sBlockIdx;\r\n  }\r\n}\r\n","import LineCube, {\r\n  getNewVertexCount,\r\n  getNewPositions,\r\n  getNewIndices,\r\n  getSharedFaces\r\n} from \"./line_cube.js\";\r\n\r\n/* t-block\r\n  ________\r\n |__    __|\r\n    |__|\r\n */\r\n\r\nvar tBlockIdx = [\r\n  [-1, 0, 0],\r\n  [0, 0, 0],\r\n  [0, 1, 0],\r\n  [1, 0, 0]\r\n];\r\n\r\nconst tBlockShared = getSharedFaces(tBlockIdx);\r\nconst tBlockSharedCount = tBlockShared.sharedCount;\r\nconst tBlockSharedLines = tBlockShared.sharedLines;\r\nconst tBlockPositions = getNewPositions(tBlockIdx, tBlockSharedLines);\r\nconst tBlockIndices = getNewIndices(tBlockIdx);\r\nconst tBlockVertexCount = getNewVertexCount(tBlockIdx, tBlockSharedCount);\r\n\r\nexport default class tBlock extends LineCube {\r\n  getPositions() {\r\n    return tBlockPositions;\r\n  }\r\n  getIndices() {\r\n    return tBlockIndices;\r\n  }\r\n  getVertexCount() {\r\n    return tBlockVertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return tBlockIdx;\r\n  }\r\n}\r\n","import LineCube, {\r\n  getNewVertexCount,\r\n  getNewPositions,\r\n  getNewIndices,\r\n  getSharedFaces\r\n} from \"./line_cube.js\";\r\n\r\n/* o-block\r\n  ______\r\n |     |\r\n |_____|\r\n */\r\n\r\nvar oBlockIdx = [\r\n  [0, 0, 0],\r\n  [0, 1, 0],\r\n  [1, 0, 0],\r\n  [1, 1, 0]\r\n];\r\n\r\nconst oBlockShared = getSharedFaces(oBlockIdx);\r\nconst oBlockSharedCount = oBlockShared.sharedCount;\r\nconst oBlockSharedLines = oBlockShared.sharedLines;\r\nconst oBlockPositions = getNewPositions(oBlockIdx, oBlockSharedLines);\r\nconst oBlockIndices = getNewIndices(oBlockIdx);\r\nconst oBlockVertexCount = getNewVertexCount(oBlockIdx, oBlockSharedCount);\r\n\r\nexport default class oBlock extends LineCube {\r\n  getPositions() {\r\n    return oBlockPositions;\r\n  }\r\n  getIndices() {\r\n    return oBlockIndices;\r\n  }\r\n  getVertexCount() {\r\n    return oBlockVertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return oBlockIdx;\r\n  }\r\n}\r\n","import Space from \"./objects/space\";\r\n\r\nimport initObjectBuffers, { initSpaceBuffers } from \"./gl/buffers.js\";\r\nimport jBlock from \"./objects/tetris_blocks/jblock\";\r\nimport iBlock from \"./objects/tetris_blocks/iblock\";\r\nimport sBlock from \"./objects/tetris_blocks/sblock\";\r\nimport tBlock from \"./objects/tetris_blocks/tblock\";\r\nimport oBlock from \"./objects/tetris_blocks/oblock\";\r\n\r\nexport default class World {\r\n  constructor(gl, spaceSize) {\r\n    this.spaceSize = spaceSize;\r\n    this.space = new Space(spaceSize);\r\n    this.gl = gl;\r\n\r\n    // Create the scene objects\r\n    const s_block = new sBlock([1, 1, 1, 1]);\r\n    const t_block = new tBlock([1, 1, 1, 1]);\r\n    const o_block = new oBlock([1, 1, 1, 1]);\r\n    const j_block = new jBlock([1, 1, 1, 1]);\r\n    const i_block = new iBlock([1, 1, 1, 1]);\r\n    this.possibleObjects = [s_block, t_block, o_block, j_block, i_block];\r\n    this.setRandomObject();\r\n\r\n    // Initialize buffers\r\n    this.initBuffers();\r\n  }\r\n  startTimeout() {\r\n    this.timeout = window.setTimeout(this.startTimeout, 3000);\r\n  }\r\n  reset() {\r\n    this.space = new Space(this.spaceSize);\r\n    this.setRandomObject();\r\n    this.initBuffers();\r\n  }\r\n  setRandomObject() {\r\n    this.object = this.possibleObjects[\r\n      Math.floor(Math.random() * this.possibleObjects.length)\r\n    ];\r\n  }\r\n  initBuffers() {\r\n    this.objectBuffers = initObjectBuffers(this.gl, this.object);\r\n    this.spaceBuffers = initSpaceBuffers(this.gl, this.space);\r\n    this.spaceLineBuffers = initObjectBuffers(this.gl, this.space.lineSpace);\r\n    this.spaceFilledBuffers = initObjectBuffers(\r\n      this.gl,\r\n      this.space.filledSpace\r\n    );\r\n  }\r\n}\r\n","import \"./styles.css\";\nimport initShaderProgram from \"./gl/shader.js\";\nimport {\n  updatePerspectiveMatrix,\n  drawObject,\n  clearDrawing\n} from \"./gl/draw.js\";\nimport getTransform, {\n  checkKeyDown,\n  moveDown,\n  getOffsetTransform\n} from \"./key_press\";\n\nimport World from \"./world\";\n\nconst { mat4 } = require(\"gl-matrix\");\n\nfunction main() {\n  const canvas = document.querySelector(\"#glcanvas\");\n  const gl = canvas.getContext(\"webgl\");\n\n  // If we don't have a GL context, give up now\n\n  if (!gl) {\n    alert(\n      \"Unable to initialize WebGL. Your browser or machine may not support it.\"\n    );\n    return;\n  }\n\n  // Initialize a shader program; this is where all the lighting\n  // for the vertices and so forth is established.\n  const shaderProgram = initShaderProgram(gl);\n\n  // Pass the aspect ratio to the draw program\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n  updatePerspectiveMatrix(aspect);\n\n  // Collect all the info needed to use the shader program.\n  // Look up which attribute our shader program is using\n  // for aVertexPosition and look up uniform locations.\n  const programInfo = {\n    program: shaderProgram,\n    attribLocations: {\n      vertexPosition: gl.getAttribLocation(shaderProgram, \"aVertexPosition\"),\n      vertexColor: gl.getAttribLocation(shaderProgram, \"aVertexColor\")\n    },\n    uniformLocations: {\n      projectionMatrix: gl.getUniformLocation(\n        shaderProgram,\n        \"uProjectionMatrix\"\n      ),\n      modelViewMatrix: gl.getUniformLocation(shaderProgram, \"uModelViewMatrix\"),\n      transformMatrix: gl.getUniformLocation(shaderProgram, \"uTransformMatrix\")\n    }\n  };\n\n  // Create the scene objects\n  const world = new World(gl, { x: 4, y: 4, z: 10 });\n  const offsetTransform = getOffsetTransform(world.spaceSize);\n  const spaceTransform = world.space.getCentralizeTransform();\n  const spaceObjectsTransform = world.space.getCentralizeObjectsTransform();\n\n  // Draw the scene\n  let then = 0;\n\n  window.addEventListener(\"keydown\", (e) => checkKeyDown(e, world));\n\n  // Draw the scene repeatedly\n  var totalTime = 0;\n\n  function render(now) {\n    now *= 0.001; // convert to seconds\n    var deltaTime = now - then;\n    then = now;\n    totalTime += deltaTime;\n\n    if (totalTime > 1) {\n      totalTime = 0;\n      moveDown(world);\n    }\n\n    var transformMatrix = getTransform();\n    mat4.mul(transformMatrix, offsetTransform, transformMatrix);\n\n    clearDrawing(gl, programInfo);\n    drawObject(gl, programInfo, world.spaceBuffers, spaceTransform);\n    drawObject(gl, programInfo, world.objectBuffers, transformMatrix);\n    drawObject(\n      gl,\n      programInfo,\n      world.spaceFilledBuffers,\n      spaceObjectsTransform\n    );\n    drawObject(gl, programInfo, world.spaceLineBuffers, spaceObjectsTransform);\n\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n}\n\nmain();\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}