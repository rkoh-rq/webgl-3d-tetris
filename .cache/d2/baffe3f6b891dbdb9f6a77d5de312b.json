{"id":"src/objects/tetris_blocks/iblock.js","dependencies":[{"name":"/project/webgl-3d-tetris/package.json","includedInParent":true,"mtime":1662299135160},{"name":"./line_cube.js","loc":{"line":6,"column":7,"index":105},"parent":"/project/webgl-3d-tetris/src/objects/tetris_blocks/iblock.js","resolved":"/project/webgl-3d-tetris/src/objects/tetris_blocks/line_cube.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _line_cube = _interopRequireWildcard(require(\"./line_cube.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* i-block\r\n  _________\r\n |________|\r\n */\nvar iBlockIdx = [[0, -2, 0], [0, -1, 0], [0, 0, 0], [0, 1, 0]];\nvar iBlockShared = (0, _line_cube.getSharedFaces)(iBlockIdx);\nvar iBlockSharedCount = iBlockShared.sharedCount;\nvar iBlockSharedLines = iBlockShared.sharedLines;\nvar iBlockPositions = (0, _line_cube.getNewPositions)(iBlockIdx, iBlockSharedLines);\nvar iBlockIndices = (0, _line_cube.getNewIndices)(iBlockIdx);\nvar iBlockVertexCount = (0, _line_cube.getNewVertexCount)(iBlockIdx, iBlockSharedCount);\n\nvar iBlock = /*#__PURE__*/function (_LineCube) {\n  _inherits(iBlock, _LineCube);\n\n  var _super = _createSuper(iBlock);\n\n  function iBlock() {\n    _classCallCheck(this, iBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(iBlock, [{\n    key: \"getPositions\",\n    value: function getPositions() {\n      return iBlockPositions;\n    }\n  }, {\n    key: \"getIndices\",\n    value: function getIndices() {\n      return iBlockIndices;\n    }\n  }, {\n    key: \"getVertexCount\",\n    value: function getVertexCount() {\n      return iBlockVertexCount;\n    }\n  }, {\n    key: \"getBlockIdx\",\n    value: function getBlockIdx() {\n      return iBlockIdx;\n    }\n  }]);\n\n  return iBlock;\n}(_line_cube.default);\n\nexports.default = iBlock;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":1,"column":0}},{"generated":{"line":36,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":8,"column":0}},{"generated":{"line":37,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":9,"column":0}},{"generated":{"line":38,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":10,"column":0}},{"generated":{"line":39,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":11,"column":0}},{"generated":{"line":40,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":0}},{"generated":{"line":40,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":4},"name":"iBlockIdx"},{"generated":{"line":40,"column":13},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":13}},{"generated":{"line":40,"column":16},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":16}},{"generated":{"line":40,"column":17},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":2}},{"generated":{"line":40,"column":18},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":3}},{"generated":{"line":40,"column":19},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":2}},{"generated":{"line":40,"column":21},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":6}},{"generated":{"line":40,"column":22},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":7}},{"generated":{"line":40,"column":23},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":2}},{"generated":{"line":40,"column":25},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":10}},{"generated":{"line":40,"column":26},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":14,"column":2}},{"generated":{"line":40,"column":27},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":16}},{"generated":{"line":40,"column":29},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":2}},{"generated":{"line":40,"column":30},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":3}},{"generated":{"line":40,"column":31},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":2}},{"generated":{"line":40,"column":33},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":6}},{"generated":{"line":40,"column":34},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":7}},{"generated":{"line":40,"column":35},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":2}},{"generated":{"line":40,"column":37},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":10}},{"generated":{"line":40,"column":38},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":15,"column":2}},{"generated":{"line":40,"column":39},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":16}},{"generated":{"line":40,"column":41},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":16,"column":2}},{"generated":{"line":40,"column":42},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":16,"column":3}},{"generated":{"line":40,"column":43},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":16,"column":2}},{"generated":{"line":40,"column":45},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":16,"column":6}},{"generated":{"line":40,"column":46},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":16,"column":2}},{"generated":{"line":40,"column":48},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":16,"column":9}},{"generated":{"line":40,"column":49},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":16,"column":2}},{"generated":{"line":40,"column":50},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":16}},{"generated":{"line":40,"column":52},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":17,"column":2}},{"generated":{"line":40,"column":53},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":17,"column":3}},{"generated":{"line":40,"column":54},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":17,"column":2}},{"generated":{"line":40,"column":56},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":17,"column":6}},{"generated":{"line":40,"column":57},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":17,"column":2}},{"generated":{"line":40,"column":59},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":17,"column":9}},{"generated":{"line":40,"column":60},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":17,"column":2}},{"generated":{"line":40,"column":61},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":16}},{"generated":{"line":40,"column":62},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":13,"column":0}},{"generated":{"line":41,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":0}},{"generated":{"line":41,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":6},"name":"iBlockShared"},{"generated":{"line":41,"column":16},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":18}},{"generated":{"line":41,"column":19},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":21}},{"generated":{"line":41,"column":23},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":21},"name":"getSharedFaces"},{"generated":{"line":41,"column":48},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":21}},{"generated":{"line":41,"column":50},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":36},"name":"iBlockIdx"},{"generated":{"line":41,"column":59},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":21}},{"generated":{"line":41,"column":60},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":20,"column":0}},{"generated":{"line":42,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":21,"column":0}},{"generated":{"line":42,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":21,"column":6},"name":"iBlockSharedCount"},{"generated":{"line":42,"column":21},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":21,"column":23}},{"generated":{"line":42,"column":24},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":21,"column":26},"name":"iBlockShared"},{"generated":{"line":42,"column":36},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":21,"column":38}},{"generated":{"line":42,"column":37},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":21,"column":39},"name":"sharedCount"},{"generated":{"line":42,"column":48},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":21,"column":0}},{"generated":{"line":43,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":22,"column":0}},{"generated":{"line":43,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":22,"column":6},"name":"iBlockSharedLines"},{"generated":{"line":43,"column":21},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":22,"column":23}},{"generated":{"line":43,"column":24},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":22,"column":26},"name":"iBlockShared"},{"generated":{"line":43,"column":36},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":22,"column":38}},{"generated":{"line":43,"column":37},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":22,"column":39},"name":"sharedLines"},{"generated":{"line":43,"column":48},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":22,"column":0}},{"generated":{"line":44,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":0}},{"generated":{"line":44,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":6},"name":"iBlockPositions"},{"generated":{"line":44,"column":19},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":21}},{"generated":{"line":44,"column":22},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":24}},{"generated":{"line":44,"column":26},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":24},"name":"getNewPositions"},{"generated":{"line":44,"column":52},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":24}},{"generated":{"line":44,"column":54},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":40},"name":"iBlockIdx"},{"generated":{"line":44,"column":63},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":24}},{"generated":{"line":44,"column":65},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":51},"name":"iBlockSharedLines"},{"generated":{"line":44,"column":82},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":24}},{"generated":{"line":44,"column":83},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":23,"column":0}},{"generated":{"line":45,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":0}},{"generated":{"line":45,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":6},"name":"iBlockIndices"},{"generated":{"line":45,"column":17},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":19}},{"generated":{"line":45,"column":20},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":22}},{"generated":{"line":45,"column":24},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":22},"name":"getNewIndices"},{"generated":{"line":45,"column":48},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":22}},{"generated":{"line":45,"column":50},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":36},"name":"iBlockIdx"},{"generated":{"line":45,"column":59},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":22}},{"generated":{"line":45,"column":60},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":24,"column":0}},{"generated":{"line":46,"column":0},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":0}},{"generated":{"line":46,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":6},"name":"iBlockVertexCount"},{"generated":{"line":46,"column":21},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":23}},{"generated":{"line":46,"column":24},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":26}},{"generated":{"line":46,"column":28},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":26},"name":"getNewVertexCount"},{"generated":{"line":46,"column":56},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":26}},{"generated":{"line":46,"column":58},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":44},"name":"iBlockIdx"},{"generated":{"line":46,"column":67},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":26}},{"generated":{"line":46,"column":69},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":55},"name":"iBlockSharedCount"},{"generated":{"line":46,"column":86},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":26}},{"generated":{"line":46,"column":87},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":25,"column":0}},{"generated":{"line":48,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":27,"column":21},"name":"iBlock"},{"generated":{"line":61,"column":11},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":28,"column":2}},{"generated":{"line":61,"column":35},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":28,"column":17}},{"generated":{"line":62,"column":6},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":29,"column":4}},{"generated":{"line":62,"column":13},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":29,"column":11},"name":"iBlockPositions"},{"generated":{"line":62,"column":28},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":29,"column":4}},{"generated":{"line":63,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":30,"column":3}},{"generated":{"line":66,"column":11},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":31,"column":2}},{"generated":{"line":66,"column":33},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":31,"column":15}},{"generated":{"line":67,"column":6},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":32,"column":4}},{"generated":{"line":67,"column":13},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":32,"column":11},"name":"iBlockIndices"},{"generated":{"line":67,"column":26},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":32,"column":4}},{"generated":{"line":68,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":33,"column":3}},{"generated":{"line":71,"column":11},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":34,"column":2}},{"generated":{"line":71,"column":37},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":34,"column":19}},{"generated":{"line":72,"column":6},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":35,"column":4}},{"generated":{"line":72,"column":13},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":35,"column":11},"name":"iBlockVertexCount"},{"generated":{"line":72,"column":30},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":35,"column":4}},{"generated":{"line":73,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":36,"column":3}},{"generated":{"line":76,"column":11},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":37,"column":2}},{"generated":{"line":76,"column":34},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":37,"column":16}},{"generated":{"line":77,"column":6},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":38,"column":4}},{"generated":{"line":77,"column":13},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":38,"column":11},"name":"iBlockIdx"},{"generated":{"line":77,"column":22},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":38,"column":4}},{"generated":{"line":78,"column":4},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":39,"column":3}},{"generated":{"line":82,"column":2},"source":"src/objects/tetris_blocks/iblock.js","original":{"line":27,"column":36},"name":"LineCube"}],"sources":{"src/objects/tetris_blocks/iblock.js":"import LineCube, {\r\n  getNewVertexCount,\r\n  getNewPositions,\r\n  getNewIndices,\r\n  getSharedFaces\r\n} from \"./line_cube.js\";\r\n\r\n/* i-block\r\n  _________\r\n |________|\r\n */\r\n\r\nvar iBlockIdx = [\r\n  [0, -2, 0],\r\n  [0, -1, 0],\r\n  [0, 0, 0],\r\n  [0, 1, 0]\r\n];\r\n\r\nconst iBlockShared = getSharedFaces(iBlockIdx);\r\nconst iBlockSharedCount = iBlockShared.sharedCount;\r\nconst iBlockSharedLines = iBlockShared.sharedLines;\r\nconst iBlockPositions = getNewPositions(iBlockIdx, iBlockSharedLines);\r\nconst iBlockIndices = getNewIndices(iBlockIdx);\r\nconst iBlockVertexCount = getNewVertexCount(iBlockIdx, iBlockSharedCount);\r\n\r\nexport default class iBlock extends LineCube {\r\n  getPositions() {\r\n    return iBlockPositions;\r\n  }\r\n  getIndices() {\r\n    return iBlockIndices;\r\n  }\r\n  getVertexCount() {\r\n    return iBlockVertexCount;\r\n  }\r\n  getBlockIdx() {\r\n    return iBlockIdx;\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"98726cc60c27b3b9d5be83a3232cdacb","cacheData":{"env":{}}}